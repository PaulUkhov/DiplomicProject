version: '3.8'

networks:
  app-network:
    driver: bridge

services:
  postgres:
    image: postgres:16
    container_name: my_postgres
    restart: always
    environment:
      POSTGRES_DB: database
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pa
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data5
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d database"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.10
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - app-network

  logstash:
    image: logstash:7.17.10
    container_name: logstash
    volumes:
      - ./src/main/resources/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5000:5000"
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9600"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - app-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.10
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - app-network

  springboot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spring_app1
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      logstash:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/database
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: pa
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      LOGSTASH_HOST: logstash
      LOGSTASH_PORT: 5000
    networks:
      - app-network

volumes:
  postgres_data:
    driver: local
  es_data:
    driver: local